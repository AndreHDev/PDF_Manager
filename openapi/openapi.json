{
 "openapi": "3.1.0",
 "info": {
  "title": "FastAPI",
  "version": "0.1.0"
 },
 "paths": {
  "/pages/merge": {
   "post": {
    "summary": "Merge Pdfs",
    "description": "Merge passed page objects into a single PDF file. Only pages with checked=True will be merged.\n\nArgs:\n    request (List[Page]): List of Page objects to merge.\n\nReturns:\n    dict: A dictionary containing the file_id of the merged PDF.",
    "operationId": "merge_pdfs",
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "items": {
         "$ref": "#/components/schemas/Page"
        },
        "type": "array",
        "title": "Request"
       }
      }
     },
     "required": true
    },
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "type": "object",
         "title": "Response Merge Pdfs Pages Merge Post"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/pdfs": {
   "post": {
    "summary": "Upload Pdf",
    "description": "Uploads a PDF and returns its unique file_id.\n\nArgs:\n    file (UploadFile, optional): The PDF file to upload.\n\nReturns:\n    dict: A dictionary containing the file_id of the uploaded PDF.",
    "operationId": "upload_pdf",
    "requestBody": {
     "content": {
      "multipart/form-data": {
       "schema": {
        "$ref": "#/components/schemas/Body_upload_pdf_pdfs_post"
       }
      }
     },
     "required": true
    },
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "type": "object",
         "title": "Response Upload Pdf Pdfs Post"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   },
   "delete": {
    "summary": "Clean Up Temp Files",
    "description": "Cleans up temporary files created by the backend.\n\nReturns:\n    dict: A message indicating the cleanup was successful.",
    "operationId": "clean_up_temp_files",
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {}
       }
      }
     }
    }
   }
  },
  "/pdfs/{pdf_id}/pages": {
   "get": {
    "summary": "Get Pdf Pages",
    "description": "Returns a list of Page objects for a given PDF.\n\nArgs:\n    pdf_id (str): The file_id of the PDF to fetch pages for.\n\nReturns:\n    List[Page]: A list of Page objects for the given PDF.",
    "operationId": "get_pdf_pages",
    "parameters": [
     {
      "required": true,
      "schema": {
       "type": "string",
       "title": "Pdf Id"
      },
      "name": "pdf_id",
      "in": "path"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {
         "items": {
          "$ref": "#/components/schemas/Page"
         },
         "type": "array",
         "title": "Response Get Pdf Pages Pdfs  Pdf Id  Pages Get"
        }
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  },
  "/pdfs/{pdf_id}/download": {
   "get": {
    "summary": "Download Pdf",
    "description": "Gets a PDf file for download by its file_id\nArgs:\n    pdf_id (str): The file_id of the PDF to download.\n\nReturns:\n    FileResponse: The PDF file for download.",
    "operationId": "download_pdf",
    "parameters": [
     {
      "required": true,
      "schema": {
       "type": "string",
       "title": "Pdf Id"
      },
      "name": "pdf_id",
      "in": "path"
     }
    ],
    "responses": {
     "200": {
      "description": "Successful Response",
      "content": {
       "application/json": {
        "schema": {}
       }
      }
     },
     "422": {
      "description": "Validation Error",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/HTTPValidationError"
        }
       }
      }
     }
    }
   }
  }
 },
 "components": {
  "schemas": {
   "Body_upload_pdf_pdfs_post": {
    "properties": {
     "file": {
      "type": "string",
      "format": "binary",
      "title": "File"
     }
    },
    "type": "object",
    "required": [
     "file"
    ],
    "title": "Body_upload_pdf_pdfs_post"
   },
   "HTTPValidationError": {
    "properties": {
     "detail": {
      "items": {
       "$ref": "#/components/schemas/ValidationError"
      },
      "type": "array",
      "title": "Detail"
     }
    },
    "type": "object",
    "title": "HTTPValidationError"
   },
   "Page": {
    "properties": {
     "page_number": {
      "type": "integer",
      "title": "Page Number"
     },
     "thumbnail": {
      "type": "string",
      "title": "Thumbnail"
     },
     "checked": {
      "type": "boolean",
      "title": "Checked",
      "default": true
     }
    },
    "type": "object",
    "required": [
     "page_number",
     "thumbnail"
    ],
    "title": "Page"
   },
   "ValidationError": {
    "properties": {
     "loc": {
      "items": {
       "anyOf": [
        {
         "type": "string"
        },
        {
         "type": "integer"
        }
       ]
      },
      "type": "array",
      "title": "Location"
     },
     "msg": {
      "type": "string",
      "title": "Message"
     },
     "type": {
      "type": "string",
      "title": "Error Type"
     }
    },
    "type": "object",
    "required": [
     "loc",
     "msg",
     "type"
    ],
    "title": "ValidationError"
   }
  }
 }
}